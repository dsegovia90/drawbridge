#!/bin/sh

CURRENT_DIR=$( echo $PWD )

SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
SCRIPTS_DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

PROJECT_DIR=$( cd $SCRIPTS_DIR && cd .. && pwd )
APP_DIR=$PROJECT_DIR/app
# APP_NAME="lflwebreview"
CONTENT_DIR=$PROJECT_DIR/app/templates/project

VERSION=1 # Default to 1

if [ ! ${#APPCFG_PATH} -gt 0 ]; then
    APPCFG_PATH="$(which appcfg.py)"
fi

if [ ! ${#APPCFG_PATH} -gt 0 ]; then
    echo "Doesn't look like you have Google App Engine SDK installed. Go to https://cloud.google.com/appengine/downloads?hl=en"; exit 1;
fi

if [ ! $# -gt 0 ]; then
    echo 'You did not provide a command'; exit 1;
else
    COMMAND=$1
fi

case "$COMMAND" in
    'update')
        echo 'Attempting to update Vault...'
        cd "$PROJECT_DIR" && git checkout master && git pull
    ;;
    'local')
        echo 'Running local server...'
        echo ''
        echo "Clearing old project files"
        echo ''

        for item in "$CONTENT_DIR"/*
        do
            if [ -f "$item" ]; then
                rm "$item"
            else
                rm -R "$item"
            fi
        done

        echo ''
        echo "Copying files from $CURRENT_DIR to $CONTENT_DIR"
        echo ''

        for item in "$CURRENT_DIR"/*
        do
            if [ -f "$item" ]; then
                cp "$item" $CONTENT_DIR
            else
                cp -R "$item" $CONTENT_DIR
            fi
        done

        echo ''
        echo "Building app.yaml for local app"
        echo ''

        cat "$PROJECT_DIR"/app.yaml.template | sed 's/__APP_NAME__/local-app/' | sed 's/__VERSION__/'"$VERSION_NAME"'/' > "$PROJECT_DIR"/app.yaml

        dev_appserver.py "$PROJECT_DIR"
    ;;
    'create')

        if [ ! $# -eq 2 ]; then
            echo 'You did not provide an app id'; exit 1;
        fi

        echo "Clearing old project files"
        echo ''

        for item in "$CONTENT_DIR"/*
        do
            if [ -f "$item" ]; then
                rm "$item"
            else
                rm -R "$item"
            fi
        done

        VERSION_NAME=$2

        # Rebuild index.html
        echo "<!DOCTYPE html>
            <html>
                <head>
                    <meta charset=\"utf-8\">
                    <title>Starter page for $VERSION_NAME</title>
                </head>
                <body>
                    <h1>$VERSION_NAME has been created</h1>
                    <p>Go to <a href=\"/admin\">admin</a> to add users</p>
                </body>
            </html>" > "$CONTENT_DIR"/index.html

        echo ''
        echo "Building app.yaml for local app"
        echo ''

        cat "$PROJECT_DIR"/app.yaml.template | sed 's/__APP_NAME__/'"$APP_NAME"'/' | sed 's/__VERSION__/'"$VERSION_NAME"'/' > "$PROJECT_DIR"/app.yaml

        echo ''
        echo "Creating $VERSION_NAME"
        echo ''

        $APPCFG_PATH update $PROJECT_DIR

        echo ''
        echo "Cleaning up"
        echo ''

        echo ''
        echo "Deleting previous app.yaml"
        echo ''

        rm -f "$PROJECT_DIR"/app.yaml

        echo ''
        echo "Visit your site at https://$VERSION_NAME-dot-$APP_NAME.appspot.com"
        echo ''
    ;;
    'help')
        echo ""
        echo "------------------------------ -=()=- ------------------------------"
        echo ""
        echo ""
        echo ""
        echo "Welcome Vault Dweller!"
        echo ""
        echo "To update Vault, enter: 'vault update'"
        echo ""
        echo "To deploy, simply go to the folder of files you wish to deploy and enter: "
        echo ""
        echo "'vault deploy project-name-here'"
        echo ""
        echo "Need more help? Email sebastian@leftfieldlabs.com"
        echo ""
        echo ""
        echo "------------------------------ -=()=- ------------------------------"
        echo ""
    ;;
    'deploy')

        if [ ! $# -ge 2 ]; then
            echo 'You did not provide an app id'; exit 1;
        fi

        APP_NAME=$2
        BYPASS_WARNING=$3

        if [ "$BYPASS_WARNING" != '--bypass' ]; then
            echo "Are you positive you want to deploy $CURRENT_DIR? [Y/n]"
            read answer

            if [ $answer == "n" ] || [ $answer == "N" ]; then
                exit 1;
            fi
        fi

        echo ''
        echo "Targeting $CURRENT_DIR"
        echo ''

        echo ''
        echo "Checking for git hash"
        echo ''

        cd "$CURRENT_DIR" && git rev-parse --short HEAD >/dev/null 2>&1 || {
            echo >&2 "\nLooks like git is not enabled in this directory. We're gonna default to version '1', just so you know.\n"
            VERSION=0
        }

        VERSION=1

        echo ''
        echo "Clearing old project files"
        echo ''

        for item in "$CONTENT_DIR"/*
        do
            if [ -f "$item" ]; then
                rm "$item"
            else
                rm -R "$item"
            fi
        done

        echo ''
        echo "Copying files from $CURRENT_DIR to $CONTENT_DIR"
        echo ''

        for item in "$CURRENT_DIR"/*
        do
            if [ -f "$item" ]; then
                cp "$item" $CONTENT_DIR
            else
                cp -R "$item" $CONTENT_DIR
            fi
        done

        echo ''
        echo "Building app.yaml for $APP_NAME"
        echo ''

        cat "$PROJECT_DIR"/app.yaml.template | sed 's/__APP_NAME__/'"$APP_NAME"'/' | sed 's/__VERSION__/'"$VERSION_NAME"'/' > "$PROJECT_DIR"/app.yaml

        echo ''
        echo "Deploying $APP_NAME"
        echo ''

        $APPCFG_PATH update $PROJECT_DIR

        echo ''
        echo "Cleaning up"
        echo ''

        echo ''
        echo "Deleting previous app.yaml"
        echo ''

        rm -f "$PROJECT_DIR"/app.yaml

        echo ''
        echo "Visit your site at https://$APP_NAME.appspot.com"
        echo ''
    ;;
    *)
        echo "Sorry, this command was not recognized. Type 'vault help'."
    ;;
esac
